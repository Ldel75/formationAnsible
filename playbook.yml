---
- hosts: all
  become: true
  tasks:
  #- name: update distibution
   # apt:
    #  update_cache: yes
  #- name: install git
   # apt:
    #  name:
     #   - git
      #  - nodejs
       # - npm
      #update_cache: yes
  
#  - name: install apache2
#   apt:
#     name: apache2
#     state: present
#     update_cache: yes
# - name: file configuration copy
#   copy: 
#     src: index.html 
#     dest: /var/www/html
#     owner: root
#     group: root
#     mode: u+rw,g=r,o=r
# - name: launch apache2
#   service:
#       name: apache2
#       state: started
#       enabled: yes
  - name: Update the apt package index
    become: yes
    apt:
      name: "*"
      state: latest
      update_cache: yes
      force_apt_get: yes
  - name: Install packages for apt add repository over HTTPS
    become: yes
    apt:
      name: "{{ packagesdep }}"
      force_apt_get: yes
      state: latest
      update_cache: yes
    vars:
      packagesdep:
      - git
      - apt-transport-https
      - ca-certificates
      - wget
      - software-properties-common
      - gnupg2
      - curl
  - name: Add Apt signing key from official docker repo
    apt_key:
      url: https://download.docker.com/linux/debian/gpg
      state: present
  - name: add docker official repository for Debian Stretch
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/debian stretch stable
      state: present
  - name: Index new repo into the cache
    become: yes
    apt:
      name: "*"
      state: latest
      update_cache: yes
      force_apt_get: yes
  - name: actually install docker
    apt:
      name: "docker-ce"
      state: latest
      
  - name: copier les sources des projets result, vote et worker
    copy: src={{ item.src }} dest={{ item.dest }}
    with_items:
    - { src: TPDocker/result, dest: /TPDocker }
    - { src: TPDocker/vote , dest: /TPDocker }
    - { src: TPDocker/worker, dest: /TPDocker }

  - name: build docker
    service:
      name: docker
      state: started
      enabled: yes

  - name: build l'image result
    docker_image:
      build:
        dockerfile: ./TPDocker/result
        path: ./
        nocache: true
      name: image_result
      force_source: true

  - name: build l'image vote
    docker_image:
      build:
        dockerfile: ./TPDocker/vote
        path: ./
        nocache: true
      name: image_vote
      force_source: true

  - name: build l'image worker
    docker_image:
      build:
        dockerfile: ./TPDocker/worker
        path: ./
        nocache: true
      name: image_worker
      force_source: true  

  - name: Suppresion des sources
    file:
      state: absent
      path: ./TPDocker
  